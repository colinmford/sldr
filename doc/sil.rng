<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:sil="urn://www.sil.org/ldml/0.1" xmlns:cldr="urn://www.unicode.org/cldr/types/0.1" xmlns="http://relaxng.org/ns/structure/1.0" datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <include href="ldml.rng">
    <define name="special">
      <element name="special">
        <choice>
          <ref name="sil.resources"/>
          <ref name="sil.identity"/>
          <ref name="sil.reordered"/>
          <ref name="sil.simple"/>
          <ref name="sil.names"/>
          <group>
            <optional>
              <ref name="sil.matchedpairs"/>
            </optional>
            <optional>
              <ref name="sil.punctuation.patterns"/>
            </optional>
            <optional>
              <ref name="sil.quotation-marks"/>
            </optional>
          </group>
          <ref name="sil.exemplarCharacters"/>
        </choice>
      </element>
    </define>
  </include>
  <define name="attlist.sil.global" combine="interleave" cldr:metadata="true">
    <optional>
      <attribute name="draft">
        <choice>
          <value>approved</value>
          <value>contributed</value>
          <value>provisional</value>
          <value>unconfirmed</value>
          <value>tentative</value>
          <value>generated</value>
          <value>suspect</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="attlist.sil.global" combine="interleave">
    <optional>
      <attribute name="alt"/>
    </optional>
  </define>
  <define name="attlist.sil.global" combine="interleave" cldr:metadata="true">
    <zeroOrMore>
      <attribute name="references"/>
    </zeroOrMore>
  </define>
  <!--
    collation.special = element special {
        (sil.reordered | sil.simple)?
    }
  -->
  <define name="attlist.collation" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="sil:modified">
        <choice>
          <value>true</value>
          <value>false</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="attlist.sil.collation" combine="interleave">
    <optional>
      <attribute name="sil:secondary"/>
    </optional>
  </define>
  <define name="attlist.sil.collation" combine="interleave">
    <optional>
      <attribute name="sil:prefrom"/>
    </optional>
  </define>
  <define name="attlist.sil.collation" combine="interleave">
    <optional>
      <attribute name="sil:preto"/>
    </optional>
  </define>
  <define name="attlist.sil.collation" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="sil:needscompiling">
        <data type="boolean"/>
      </attribute>
    </optional>
  </define>
  <define name="sil.reordered">
    <element name="sil:reordered">
      <interleave>
        <ref name="attlist.sil.global"/>
        <ref name="attlist.sil.collation"/>
      </interleave>
      <group>
        <zeroOrMore>
          <ref name="sil.reorder"/>
        </zeroOrMore>
        <ref name="cr"/>
      </group>
    </element>
  </define>
  <define name="sil.reorder">
    <element name="sil:reorder">
      <ref name="attlist.sil.reorder"/>
    </element>
  </define>
  <define name="attlist.sil.reorder" combine="interleave">
    <attribute name="match"/>
  </define>
  <define name="attlist.sil.reorder" combine="interleave">
    <attribute name="reorder"/>
  </define>
  <define name="sil.simple">
    <element name="sil:simple">
      <interleave>
        <ref name="attlist.sil.simple"/>
        <ref name="attlist.sil.global"/>
        <ref name="attlist.sil.collation"/>
      </interleave>
      <text/>
    </element>
  </define>
  <define name="attlist.sil.simple" combine="interleave">
    <optional>
      <attribute name="secondaryonly"/>
    </optional>
  </define>
  <define name="attlist.sil.simple" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="xml:space">
        <value>preserve</value>
      </attribute>
    </optional>
  </define>
  <!--
    ldml.special = element special {
       (sil.resources?)
    }
  -->
  <define name="sil.resources">
    <element name="sil:external-resources">
      <zeroOrMore>
        <ref name="sil.font"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="sil.kbdrsrc"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="sil.spellcheck"/>
      </zeroOrMore>
      <zeroOrMore>
        <ref name="sil.transform"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="sil.url">
    <element name="sil:url">
      <ref name="attlist.sil.global"/>
      <data type="anyURI"/>
    </element>
  </define>
  <define name="sil.font">
    <element name="sil:font">
      <interleave>
        <ref name="attlist.sil.fontelement"/>
        <ref name="attlist.sil.global"/>
      </interleave>
      <zeroOrMore>
        <ref name="sil.url"/>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.sil.fontelement" combine="interleave">
    <attribute name="name"/>
  </define>
  <define name="attlist.sil.fontelement" combine="interleave" cldr:value="true">
    <attribute name="types"/>
  </define>
  <!--
    attlist.sil.fontelement &= attribute types
                                        { "default" | "heading" | "emphasis" | text }*
  -->
  <define name="attlist.sil.fontelement" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="size">
        <data type="decimal"/>
      </attribute>
    </optional>
  </define>
  <define name="attlist.sil.fontelement" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="minversion">
        <data type="decimal"/>
      </attribute>
    </optional>
  </define>
  <define name="attlist.sil.fontelement" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="features"/>
    </optional>
  </define>
  <define name="attlist.sil.fontelement" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="lang"/>
    </optional>
  </define>
  <define name="attlist.sil.fontelement" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="otlang"/>
    </optional>
  </define>
  <define name="attlist.sil.fontelement" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="engines">
        <list>
          <oneOrMore>
            <choice>
              <value>gr</value>
              <value>ot</value>
            </choice>
          </oneOrMore>
        </list>
      </attribute>
    </optional>
  </define>
  <define name="attlist.sil.fontelement" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="subset"/>
    </optional>
  </define>
  <define name="sil.kbdrsrc">
    <element name="sil:kbd">
      <interleave>
        <ref name="attrlist.sil.kbdrsrc"/>
        <ref name="attlist.sil.global"/>
      </interleave>
      <oneOrMore>
        <ref name="sil.url"/>
      </oneOrMore>
    </element>
  </define>
  <define name="attrlist.sil.kbdrsrc" combine="interleave">
    <attribute name="id"/>
  </define>
  <define name="attrlist.sil.kbdrsrc" combine="interleave">
    <optional>
      <attribute name="type"/>
    </optional>
  </define>
  <!-- attrlist.sil.kbdrsrc &= attribute type { "kmn" | "kmx" | "msklc" | "ldml" | "keylayout" | "kmp" | text }? -->
  <define name="sil.spellcheck">
    <element name="sil:spell-checking">
      <interleave>
        <ref name="attlist.sil.spellcheck"/>
        <ref name="attlist.sil.global"/>
      </interleave>
      <oneOrMore>
        <ref name="sil.url"/>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.sil.spellcheck" combine="interleave">
    <attribute name="type"/>
  </define>
  <!-- attlist.sil.spellcheck &= attribute type { "hunspell", "wordlist", text } -->
  <define name="sil.transform">
    <element name="sil:transform">
      <interleave>
        <ref name="attlist.sil.transform"/>
        <ref name="attlist.sil.global"/>
      </interleave>
      <group>
        <optional>
          <ref name="sil.transform.caps"/>
        </optional>
        <optional>
          <ref name="sil.transform.dict"/>
        </optional>
        <oneOrMore>
          <ref name="sil.url"/>
        </oneOrMore>
      </group>
    </element>
  </define>
  <define name="attlist.sil.transform" combine="interleave">
    <attribute name="from"/>
  </define>
  <define name="attlist.sil.transform" combine="interleave">
    <attribute name="to"/>
  </define>
  <define name="attlist.sil.transform" combine="interleave">
    <attribute name="type">
      <choice>
        <value>cct</value>
        <value>perl</value>
        <value>python</value>
        <value>teckit</value>
      </choice>
    </attribute>
  </define>
  <define name="attlist.sil.transform" combine="interleave" cldr:value="true">
    <attribute name="direction">
      <choice>
        <value>both</value>
        <value>forward</value>
        <value>backward</value>
      </choice>
    </attribute>
  </define>
  <define name="attlist.sil.transform" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="function"/>
    </optional>
  </define>
  <define name="sil.transform.dict">
    <element name="sil:transform-dict">
      <interleave>
        <ref name="attlist.sil.transform.dict"/>
        <ref name="attlist.sil.global"/>
      </interleave>
      <oneOrMore>
        <ref name="sil.url"/>
      </oneOrMore>
    </element>
  </define>
  <define name="attlist.sil.transform.dict" combine="interleave">
    <attribute name="incol"/>
  </define>
  <!-- attlist.sil.transform.dict &= attribute incol { "0" | text } -->
  <define name="attlist.sil.transform.dict" combine="interleave">
    <attribute name="outcol"/>
  </define>
  <!-- attlist.sil.transform.dict &= attribute outcol { "1" | text } -->
  <define name="attlist.sil.transform.dict" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="nf">
        <choice>
          <value>nfd</value>
          <value>nfc</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="sil.transform.caps">
    <element name="sil:transform-capitals">
      <interleave>
        <ref name="attlist.sil.transform.caps"/>
        <ref name="attlist.sil.global"/>
      </interleave>
    </element>
  </define>
  <define name="attlist.sil.transform.caps" combine="interleave">
    <optional>
      <attribute name="opengroup"/>
    </optional>
  </define>
  <!-- attlist.sil.transform.caps &= attribute opengroup { '&quot;"\u{2018}\u{201C}\[{(<\u00AB' | text }? -->
  <define name="attlist.sil.transform.caps" combine="interleave">
    <optional>
      <attribute name="closegroup"/>
    </optional>
  </define>
  <!-- attlist.sil.transform.caps &= attribute closegroup { '&quot;"\u{2019}\u{201D}\]})>\u00BB' | text }? -->
  <define name="attlist.sil.transform.caps" combine="interleave">
    <optional>
      <attribute name="sentencefinal"/>
    </optional>
  </define>
  <!-- attlist.sil.transform.caps &= attribute sentencefinal { ".!?" | text }? -->
  <define name="attlist.sil.transform.caps" combine="interleave">
    <optional>
      <attribute name="startcaps"/>
    </optional>
  </define>
  <!--
    identity.special = element special {
        attlist.identity,
        (sil.identity)
    }
  -->
  <define name="sil.identity">
    <element name="sil:identity">
      <interleave>
        <ref name="attlist.sil.identity"/>
        <ref name="attlist.sil.global"/>
      </interleave>
      <optional>
        <ref name="sil.identity.committer"/>
      </optional>
    </element>
  </define>
  <define name="attlist.sil.identity" combine="interleave">
    <optional>
      <attribute name="revid"/>
    </optional>
  </define>
  <define name="attlist.sil.identity" combine="interleave">
    <optional>
      <attribute name="uid"/>
    </optional>
  </define>
  <define name="attlist.sil.identity" combine="interleave">
    <zeroOrMore>
      <attribute name="fallbacks"/>
    </zeroOrMore>
  </define>
  <define name="attlist.sil.identity" combine="interleave">
    <optional>
      <attribute name="source"/>
    </optional>
  </define>
  <!-- attlist.sil.identity &= attribute source { "cldr" | "cldrseed" | text }? -->
  <define name="attlist.sil.identity" combine="interleave">
    <optional>
      <attribute name="windowsLCID"/>
    </optional>
  </define>
  <define name="attlist.sil.identity" combine="interleave">
    <optional>
      <attribute name="defaultRegion"/>
    </optional>
  </define>
  <define name="attlist.sil.identity" combine="interleave">
    <optional>
      <attribute name="variantName"/>
    </optional>
  </define>
  <define name="attlist.sil.identity" combine="interleave">
    <optional>
      <attribute name="usage">
        <choice>
          <value>unused</value>
          <value>developing</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="attlist.sil.identity" combine="interleave">
    <zeroOrMore>
      <attribute name="toplevels"/>
    </zeroOrMore>
  </define>
  <define name="attlist.sil.identity" combine="interleave">
    <optional>
      <attribute name="script"/>
    </optional>
  </define>
  <define name="sil.identity.committer">
    <element name="sil:committer">
      <interleave>
        <ref name="attlist.sil.committer"/>
        <ref name="attlist.sil.global"/>
      </interleave>
      <text/>
    </element>
  </define>
  <define name="attlist.sil.committer" combine="interleave">
    <optional>
      <attribute name="machid"/>
    </optional>
  </define>
  <!--
    localeDisplayNames.special = element special { 
        (sil.names?)
    }
  -->
  <define name="sil.names">
    <element name="sil:names">
      <oneOrMore>
        <ref name="sil.name"/>
      </oneOrMore>
    </element>
  </define>
  <define name="sil.name">
    <element name="sil:name">
      <interleave>
        <ref name="attlist.silname"/>
        <ref name="attlist.sil.global"/>
      </interleave>
      <text/>
    </element>
  </define>
  <define name="attlist.silname" combine="interleave">
    <attribute name="xml:lang"/>
  </define>
  <!--
    delimiters.special = element special {
        attlist.delimiters,
        (sil.matchedpairs?,
         sil.punctuation.patterns?,
         sil.quotation-marks?)
    }
  -->
  <define name="sil.quotation-marks">
    <element name="sil:quotation-marks">
      <interleave>
        <ref name="attlist.sil.quotation-marks"/>
        <ref name="attlist.sil.global"/>
      </interleave>
      <zeroOrMore>
        <choice>
          <element name="sil:quotationContinue">
            <text/>
          </element>
          <element name="sil:alternateQuotationContinue">
            <text/>
          </element>
          <zeroOrMore>
            <ref name="sil.quotation"/>
          </zeroOrMore>
        </choice>
      </zeroOrMore>
    </element>
  </define>
  <define name="attlist.sil.quotation-marks" combine="interleave">
    <optional>
      <attribute name="paraContinueType">
        <choice>
          <value>all</value>
          <value>outer</value>
          <value>inner</value>
          <value>none</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="sil.quotation">
    <element name="sil:quotation">
      <interleave>
        <ref name="attlist.sil.quotation"/>
        <ref name="attlist.sil.global"/>
      </interleave>
    </element>
  </define>
  <define name="attlist.sil.quotation" combine="interleave">
    <attribute name="open"/>
  </define>
  <define name="attlist.sil.quotation" combine="interleave">
    <optional>
      <attribute name="close"/>
    </optional>
  </define>
  <define name="attlist.sil.quotation" combine="interleave">
    <optional>
      <attribute name="continue"/>
    </optional>
  </define>
  <define name="attlist.sil.quotation" combine="interleave">
    <attribute name="level"/>
  </define>
  <define name="attlist.sil.quotation" combine="interleave">
    <optional>
      <attribute name="type"/>
    </optional>
  </define>
  <!-- attlist.sil.quotation &= attribute type { "narrative" | text }? -->
  <define name="sil.punctuation.patterns">
    <element name="sil:punctuation-patterns">
      <oneOrMore>
        <ref name="sil.punctuation.pattern"/>
      </oneOrMore>
    </element>
  </define>
  <define name="sil.punctuation.pattern">
    <element name="sil:punctuation-pattern">
      <interleave>
        <ref name="attlist.sil.punctuation-pattern"/>
        <ref name="attlist.sil.global"/>
      </interleave>
    </element>
  </define>
  <define name="attlist.sil.punctuation-pattern" combine="interleave">
    <attribute name="pattern"/>
  </define>
  <define name="attlist.sil.punctuation-pattern" combine="interleave">
    <optional>
      <attribute name="context">
        <choice>
          <value>init</value>
          <value>medial</value>
          <value>final</value>
          <value>break</value>
          <value>isolate</value>
        </choice>
      </attribute>
    </optional>
  </define>
  <define name="sil.matchedpairs">
    <element name="sil:matched-pairs">
      <oneOrMore>
        <ref name="sil.matchedpair"/>
      </oneOrMore>
    </element>
  </define>
  <define name="sil.matchedpair">
    <element name="sil:matched-pair">
      <interleave>
        <ref name="attlist.sil.matched-pair"/>
        <ref name="attlist.sil.global"/>
      </interleave>
    </element>
  </define>
  <define name="attlist.sil.matched-pair" combine="interleave">
    <attribute name="open"/>
  </define>
  <define name="attlist.sil.matched-pair" combine="interleave">
    <attribute name="close"/>
  </define>
  <define name="attlist.sil.matched-pair" combine="interleave" cldr:value="true">
    <optional>
      <attribute name="paraClose">
        <data type="boolean"/>
      </attribute>
    </optional>
  </define>
  <!--
    characters.special = element special {
    }
  -->
  <define name="sil.exemplarCharacters">
    <zeroOrMore>
      <element name="sil:exemplarCharacters">
        <interleave>
          <ref name="attlist.sil.exemplarCharacters"/>
          <ref name="attlist.sil.global"/>
        </interleave>
        <text/>
      </element>
    </zeroOrMore>
  </define>
  <define name="attlist.sil.exemplarCharacters" combine="interleave">
    <attribute name="type"/>
  </define>
</grammar>
